name: Integration Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  Test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    
    - name: Restore
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore
    
    - name: Test
      run: dotnet test --no-build --verbosity normal --logger "trx" --collect:"XPlat Code Coverage"

    - name: Test Reporter
      uses: dorny/test-reporter@v1.5.0
      if: success() || failure()  
      with:
        name: Test report       # Name of the check run which will be created
        path: '**/*.trx'        # Path to test results
        reporter: dotnet-trx    # Format of test results
        'fail-on-error': false   # Fail the workflow if the test results contain errors

    - name: Coverage Reporter
      uses: codecov/codecov-action@v2
      if: success() || failure()  
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        files: '**/coverage.cobertura.xml'
        flags: unittests
        name: codecov-umbrella
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true

    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@5.0.3
      if: success() || failure()  
      with:
        reports: 'coverage.xml' # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
        targetdir: 'coveragereport' # REQUIRED # The directory where the generated report should be saved.
        reporttypes: 'HtmlInline;Cobertura' # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, Xml, XmlSummary
        sourcedirs: '' # Optional directories which contain the corresponding source code (separated by semicolon). The source directories are used if coverage report contains classes without path information.
        historydir: '' # Optional directory for storing persistent coverage information. Can be used in future reports to show coverage evolution.
        plugins: '' # Optional plugin files for custom reports or custom history storage (separated by semicolon).
        assemblyfilters: '+*' # Optional list of assemblies that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
        classfilters: '+*' # Optional list of classes that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
        filefilters: '+*' # Optional list of files that should be included or excluded in the report. Exclusion filters take precedence over inclusion filters. Wildcards are allowed.
        verbosity: 'Info' # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
        title: '' # Optional title.
        tag: '${{ github.run_number }}_${{ github.run_id }}' # Optional tag or build version.
        customSettings: '' # Optional custom settings (separated by semicolon). See: https://github.com/danielpalme/ReportGenerator/wiki/Settings.
        toolpath: 'reportgeneratortool' # Default directory for installing the dotnet tool.

    - name: Upload coverage report artifact
      uses: actions/upload-artifact@v2.2.3
      if: success() || failure()  
      with:
        name: CoverageReport # Artifact name        
        path: coveragereport # Directory containing files to upload